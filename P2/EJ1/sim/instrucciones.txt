Address     Code        Basic                        Line Source

0x00400000  0x100102b7  lui x5,0x00010010            26   main:       lui  t0, %hi(num0)  # Carga la parte alta de la dir num0
0x00400004  0x00000013  addi x0,x0,0                 27               nop
0x00400008  0x00000013  addi x0,x0,0                 28               nop
0x0040000c  0x00000013  addi x0,x0,0                 29               nop
0x00400010  0x0002a303  lw x6,0(x5)                  30               lw   t1, 0(t0)      # En x6 un 1
0x00400014  0x0042a383  lw x7,4(x5)                  31               lw   t2, 4(t0)      # En x7 un 2
0x00400018  0x0082ae03  lw x28,8(x5)                 32               lw   t3, 8(t0)      # En x28 un 4 
0x0040001c  0x00c2ae83  lw x29,12(x5)                33               lw   t4,12(t0)      # En x29 un 8
0x00400020  0x0102af03  lw x30,16(x5)                34               lw   t5,16(t0)      # En x30 un 16
0x00400024  0x0142af83  lw x31,20(x5)                35               lw   t6,20(t0)      # En x31 un 32
0x00400028  0x0262a023  sw x6,0x00000020(x5)         37               sw   t1, 32(t0)     # Graba x6 en dir 32 (un 1)
0x0040002c  0x0272a223  sw x7,0x00000024(x5)         38               sw   t2, 36(t0)     # Graba x7 en dir 36 (En x6 un 2)
0x00400030  0x03c2a423  sw x28,0x00000028(x5)        39               sw   t3, 40(t0)     # Graba x28 en dir 40 (En x7 un 4) 
0x00400034  0x03d2a623  sw x29,0x0000002c(x5)        40               sw   t4, 44(t0)     # Graba x29 en dir 44 (En x29 un 8)
0x00400038  0x03e2a823  sw x30,0x00000030(x5)        41               sw   t5, 48(t0)     # Graba x30 en dir 48 (En x30 un 16)
0x0040003c  0x03f2aa23  sw x31,0x00000034(x5)        42               sw   t6, 52(t0)     # Graba x31 en dir 52 (En x31 un 32)
0x00400040  0x0202a583  lw x11,0x00000020(x5)        44               lw   a1, 32(t0)     # Graba en x11 desde dir 32 (un 1)
0x00400044  0x0242a603  lw x12,0x00000024(x5)        45               lw   a2, 36(t0)     # Graba en x12 desde dir 36 (un 2)
0x00400048  0x0282a683  lw x13,0x00000028(x5)        46               lw   a3, 40(t0)     # Graba en x13 desde dir 40 (un 4) 
0x0040004c  0x02c2a703  lw x14,0x0000002c(x5)        47               lw   a4, 44(t0)     # Graba en x14 desde dir 44 (un 8)
0x00400050  0x0302a783  lw x15,0x00000030(x5)        48               lw   a5, 48(t0)     # Graba en x15 desde dir 48 (un 16)
0x00400054  0x0342a803  lw x16,0x00000034(x5)        49               lw   a6, 52(t0)     # Graba en x16 desde dir 52 (un 32)
0x00400058  0x12b31663  bne x6,x11,0x0000012c        51               bne  t1, a1, error_LW # tienen que ser iguales y no saltar
0x0040005c  0x12c39463  bne x7,x12,0x00000128        52               bne  t2, a2, error_LW
0x00400060  0x12de1263  bne x28,x13,0x00000124       53               bne  t3, a3, error_LW
0x00400064  0x12ee9063  bne x29,x14,0x00000120       54               bne  t4, a4, error_LW
0x00400068  0x10ff1e63  bne x30,x15,0x0000011c       55               bne  t5, a5, error_LW
0x0040006c  0x110f9c63  bne x31,x16,0x00000118       56               bne  t6, a6, error_LW
0x00400070  0x03700313  addi x6,x0,0x00000037        60   Pru_add:    li   t1, 55        # En x6 un 55. Asume que addi funciona correctamente
0x00400074  0x04d00393  addi x7,x0,0x0000004d        61               li   t2, 77        # En x7 un 77. Asume que addi funciona correctamente
0x00400078  0x00638533  add x10,x7,x6                62               add  a0, t2, t1    # En x10, 55+77=132. En Pipeline sin adelantamiento puede fallar
0x0040007c  0x006385b3  add x11,x7,x6                63               add  a1, t2, t1    # En x11, 55+77=132. En Pipeline sin adelantamiento puede fallar   
0x00400080  0x00638633  add x12,x7,x6                64               add  a2, t2, t1    # En x12, 55+77=132. En Pipeline sin adelantamiento puede fallar
0x00400084  0x006386b3  add x13,x7,x6                65               add  a3, t2, t1    # En x13, 55+77=132.        
0x00400088  0x00000013  addi x0,x0,0                 66               nop
0x0040008c  0x00000013  addi x0,x0,0                 67               nop
0x00400090  0x00000013  addi x0,x0,0                 68               nop
0x00400094  0x0f000e13  addi x28,x0,0x000000f0       70   Pru_and:    li   t3, 0xF0      # En x28 0xF0
0x00400098  0x00000013  addi x0,x0,0                 71               nop
0x0040009c  0x00000013  addi x0,x0,0                 72               nop
0x004000a0  0x00000013  addi x0,x0,0                 73               nop
0x004000a4  0x01c6f733  and x14,x13,x28              74               and  a4, a3, t3    # En x14 0x80
0x004000a8  0x0f06f793  andi x15,x13,0x000000f0      75               andi a5, a3, 0xF0  # En x15 0x80
0x004000ac  0x00000013  addi x0,x0,0                 76               nop
0x004000b0  0x00000013  addi x0,x0,0                 77               nop
0x004000b4  0x00000013  addi x0,x0,0                 78               nop     
0x004000b8  0x02f70063  beq x14,x15,0x00000020       79               beq  a4, a5, Pru_xor
0x004000bc  0x00000013  addi x0,x0,0                 80               nop
0x004000c0  0x00000013  addi x0,x0,0                 81               nop
0x004000c4  0x00000013  addi x0,x0,0                 82               nop
0x004000c8  0x0d00006f  jal x0,0x000000d0            83               j    error_AND
0x004000cc  0x00000013  addi x0,x0,0                 84               nop
0x004000d0  0x00000013  addi x0,x0,0                 85               nop
0x004000d4  0x00000013  addi x0,x0,0                 86               nop
0x004000d8  0xfff00e93  addi x29,x0,0xffffffff       88   Pru_xor:    addi t4, zero, -1  # cargar x29 con FFF..FFF           
0x004000dc  0x0182ae03  lw x28,24(x5)                89               lw   t3, 24(t0)    # En x28 AAAA5555
0x004000e0  0x01de4f33  xor x30,x28,x29              90               xor  t5, t3, t4    # t5 = not (t3), es decir 5555AAAA
0x004000e4  0x01cf4fb3  xor x31,x30,x28              91               xor  t6, t5, t3    # debe dar -1. t6 = t3 xor not(x3)
0x004000e8  0x00000013  addi x0,x0,0                 94               nop
0x004000ec  0x00000013  addi x0,x0,0                 95               nop
0x004000f0  0x01de4f33  xor x30,x28,x29              96               xor  t5, t3, t4    # t5 = not (t3), es decir 5555AAAA
0x004000f4  0x00000013  addi x0,x0,0                 97               nop
0x004000f8  0x00000013  addi x0,x0,0                 98               nop
0x004000fc  0x00000013  addi x0,x0,0                 99               nop
0x00400100  0x01cf4fb3  xor x31,x30,x28              100              xor  t6, t5, t3    # debe dar -1. t6 = t3 xor not(x3)   
0x00400104  0x0fc10297  auipc x5,0x0000fc10          104  Pru_AUIPC:  la t0, buffer         # carga la dreccion del buffer en t0 (X5) [auiPC + addi). No funciona sin control de riesgos
0x00400108  0xf1828293  addi x5,x5,0xffffff18             
0x0040010c  0x10010337  lui x6,0x00010010            105              lui  t1, %hi(buffer)    # Carga la parte alta de la dir buffer
0x00400110  0x00000013  addi x0,x0,0                 106              nop
0x00400114  0x00000013  addi x0,x0,0                 107              nop
0x00400118  0x00000013  addi x0,x0,0                 108              nop
0x0040011c  0x01c30313  addi x6,x6,28                109              addi t1, t1, %lo(buffer) # Carga la parte baja de la dir buffer
0x00400120  0x00000013  addi x0,x0,0                 110              nop
0x00400124  0x00000013  addi x0,x0,0                 111              nop
0x00400128  0x00000013  addi x0,x0,0                 112              nop
0x0040012c  0x00000013  addi x0,x0,0                 114              nop
0x00400130  0x00000013  addi x0,x0,0                 115              nop
0x00400134  0x00000013  addi x0,x0,0                 116              nop
0x00400138  0x028000ef  jal x1,0x00000028            119  Pru_jal:    jal ra, subroutine           
0x0040013c  0x00000013  addi x0,x0,0                 120              nop
0x00400140  0x00000013  addi x0,x0,0                 121              nop
0x00400144  0x00000013  addi x0,x0,0                 122              nop
0x00400148  0xff100313  addi x6,x0,0xfffffff1        123              addi t1, zero, -15
0x0040014c  0x00000013  addi x0,x0,0                 124              nop
0x00400150  0x00000013  addi x0,x0,0                 125              nop
0x00400154  0x00000013  addi x0,x0,0                 126              nop
0x00400158  0x06629463  bne x5,x6,0x00000068         127              bne t0, t1, error_JAL
0x0040015c  0x0780006f  jal x0,0x00000078            128              j OK_prog
0x00400160  0xff100293  addi x5,x0,0xfffffff1        130  subroutine: addi t0, zero -15  # guardo en x5 valor FFFF_FFF1. Como marca
0x00400164  0x00000013  addi x0,x0,0                 131              nop
0x00400168  0x00000013  addi x0,x0,0                 132              nop
0x0040016c  0x00000013  addi x0,x0,0                 133              nop
0x00400170  0x00008067  jalr x0,x1,0                 134              jalr zero, 0(ra)   # retorno: en ra(x1) tiene que estar la dir de retorno
0x00400174  0x00000013  addi x0,x0,0                 135              nop
0x00400178  0x00000013  addi x0,x0,0                 136              nop
0x0040017c  0x00000013  addi x0,x0,0                 137              nop
0x00400180  0x0dd00293  addi x5,x0,0x000000dd        138              addi t0, zero, 0xDD #nunca debe ejecutarse
0x00400184  0xfff30313  addi x6,x6,0xffffffff        141  error_LW:   addi t1, t1, -1      # decrementa infinitamente t0
0x00400188  0xfe000ee3  beq x0,x0,0xfffffffc         142              beq  x0, x0, error_LW
0x0040018c  0x00000013  addi x0,x0,0                 143              nop
0x00400190  0x00000013  addi x0,x0,0                 144              nop
0x00400194  0x00000013  addi x0,x0,0                 145              nop
0x00400198  0xfff38393  addi x7,x7,0xffffffff        146  error_AND:  addi t2, t2, -1      # decrementa infinitamente t0
0x0040019c  0xfe000ee3  beq x0,x0,0xfffffffc         147              beq  x0, x0, error_AND
0x004001a0  0x00000013  addi x0,x0,0                 148              nop
0x004001a4  0x00000013  addi x0,x0,0                 149              nop
0x004001a8  0x00000013  addi x0,x0,0                 150              nop
0x004001ac  0xfffe0e13  addi x28,x28,0xffffffff      151  error_AUI:  addi t3, t3, -1      # decrementa infinitamente t0
0x004001b0  0xfe000ee3  beq x0,x0,0xfffffffc         152              beq  x0, x0, error_AUI
0x004001b4  0x00000013  addi x0,x0,0                 153              nop
0x004001b8  0x00000013  addi x0,x0,0                 154              nop
0x004001bc  0x00000013  addi x0,x0,0                 155              nop    
0x004001c0  0xfffe8e93  addi x29,x29,0xffffffff      156  error_JAL:  addi t4, t4, -1      # decrementa infinitamente t4
0x004001c4  0xfe000ee3  beq x0,x0,0xfffffffc         157              beq  x0, x0, error_JAL
0x004001c8  0x00000013  addi x0,x0,0                 158              nop
0x004001cc  0x00000013  addi x0,x0,0                 159              nop
0x004001d0  0x00000013  addi x0,x0,0                 160              nop       
0x004001d4  0x001f8f93  addi x31,x31,1               161  OK_prog:    addi t6, t6, 1      # incrementa infinitamente t6 (x31)
0x004001d8  0xfe000ee3  beq x0,x0,0xfffffffc         162              beq  x0, x0, OK_prog
0x004001dc  0x00000013  addi x0,x0,0                 163              nop
0x004001e0  0x00000013  addi x0,x0,0                 164              nop
0x004001e4  0x00000013  addi x0,x0,0                 165              nop
